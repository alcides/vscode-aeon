$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: Aeon
scopeName: source.aeon
fileTypes: [ae]
patterns:
  - include: "#comments"
  - include: "#keywords"
  - include: "#literals"
  - include: "#operators"
  - include: "#functions"
  - include: "#types"
repository:
  comments:
    patterns:
      - include: "#lineComment"
  lineComment:
    patterns:
      - match: "#.*$"
        name: keyword.comment.todo.aeon
  literals:
    patterns:
      - include: "#strings"
      - include: "#numbers"
      - include: "#booleans"
  strings:
    name: string.quoted.double.aeon
    begin: '"'
    end: '"'
    patterns:
      - name: constant.character.escape.aeon
        match: \\.
  numbers:
    patterns:
      - match: '\b\d+(\.\d+)?\b'
        captures:
          "0": { name: constant.numeric.integer.aeon }
          "1": { name: constant.numeric.float.aeon }
  booleans:
    patterns:
      - name: constant.language.boolean.aeon
        match: \b(true|false)\b
  operators:
    patterns:
      - name: keyword.operator.arithmetic.aeon
        match: \+|\-|\*|\/|\%
      - name: keyword.operator.comparison.aeon
        match: "==|>=|<=|>|<|!="
      - name: keyword.operator.logical.aeon
        match: \|\||&&|!
      - name: keyword.operator.lambda.aeon
        match: '=>|\->'
      - name: keyword.operator.assignment.aeon
        match: "="
  types:
    patterns:
      - include: "#primitiveTypes"
      - include: "#liquidTypes"
      - include: "#typeAssignment"
  typeAssignment:
    match: '\b[a-zA-Z][a-zA-Z0-9_]*\s*(:)\s*([a-zA-Z][a-zA-Z0-9_]*)\b'
    captures:
      "1": { name: keyword.operator.type.assignment.aeon }
      "2": { name: entity.name.type.aeon }
  primitiveTypes:
    patterns:
      - name: entity.name.type.aeon
        match: \b(Unit|Int|Float|String|Bool)\b
  liquidTypes:
    patterns:
      - name: entity.name.type.liquidtype.aeon
        match: \{([^}]+)\|([^}]+)\}
      - name: keyword.operator.liquidtype.aeon
        match: \|
  functions:
    patterns:
      - include: "#functionDefinitions"
      - include: "#nativeFunctions"
  functionDefinitions:
    patterns:
      - match: '\b(def)\s+([a-zA-Z][a-zA-Z0-9_]*)(\s*\(.*\)\s*)*(:)\s+([a-zA-Z][a-zA-Z0-9_]*)\b'
        captures:
          "1": { name: keyword.operator.type.assignment.aeon }
          "2": { name: entity.name.type.aeon }
          "3": {} #TODO needs to be further processed
          "4": { name: keyword.operator.type.assignment.aeon}
          "5": { name: storage.type.aeon }
  nativeFunctions:
    patterns:
      - name: support.function.aeon
        match: \b(native|native_import)\b #TODO improve this in the future to support python native syntax highlighting
  keywords:
    patterns:
      - include: "#importKeyword"
      - include: "#controlKeywords"
  importKeyword:
    patterns:
      - match: '^(import)\s+"(.+)"' #adiciar entity.name.namespace.aeon
        captures:
          "1": { name: keyword.other.import.aeon }
          "2": { name: entity.name.namespace.aeon }
  controlKeywords:
    patterns:
      - match: '\b(where|let|in)\b'
        captures:
          "1": { name: keyword.other.$1.aeon }

      - match: '\b(if|then|else)\b'
        captures:
          "1": { name: keyword.control.aeon }
